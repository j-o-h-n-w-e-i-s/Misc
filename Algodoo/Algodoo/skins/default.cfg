/* When making your own skin, you can override (redefine) any of these values.
You can also choose to only override a subset of these values,
in which case the unoverriden ones will remain their default value (the value defined in this file).
*/

textureDirs = ["default"]; // default value is this, add additional paths before "default" to override default textures

opacity =.925; // The global GUI opacity. Set to lower to a lower value to get more transparent menus
bgColor = [.525, .55, .575, 1];   // RGBA. The overall background color. Can be overriden with by setting 'overrideColor' to a high value (e.g. 0.9)
fgColor = [.975, .975, .975, 1];  // For beige text // RGBA. The foreground color of components (including text)
focuscolor = [0, 0, 0, 1];   // RGBA. The background color of components with focus (i.e. texture boxes we are typing in)
noColor = [1, .7, .6, 1];  // RGBA. The font color of components with cancel, no text 
yesColor = [0.8, 1, 0.8, 1];  // RGBA. The font color of components with yes, confirm 
dangerColor = [1, .7, .6, 1];    // RGBA. The font color of components like the reset button 

font = "Verdana";                  // The skin font. This is no more than a hint, since the font may not be found, and if it is it may not be compatible with the current language.
fontSize = 12;                     // Default font size (in points/pixels)
fontShadow = false;                 // Enable/disable the font drop shadow
fontShadowOffsetPx = [1, 1]; // The offset (in pixels) of the font drop shadow

scale = 1;
tooltipFontSize = 14;
windowTitleFontSize = 16;
studentScale = 2;

// These controls the wobblyness of windows
wobbleStiffness = 350.0; // Pixels per second per second per pixel
wobbleFriction = 30.0;   // Controls how fast the wobble dies out

// Controls the throwing of windows
windowFriction = 1000.0; // Pixels per second squared. Controls the slow-down of thrown windows
windowMinVel = 20.0;     // Pixels per second. Windows moving slower than this will stop

windowSnapDist = 16.0; // Pixels. Windows will snap to things closer than this
windowSnappedSpacing = 1.0; // Pixels. The distance between snapped windows

sliderWidth = 256;
sliderHeight = 12;

colorSliderHeight = 10;
colorSliderWidth = 128;
colorAreaSize = [128, 128];

tinyIconSize  = 8;
smallIconSize = 16;
toolIconsize  = 24;
largeIconsize = 32;


/*
	A given texture is split into 4x4 blocks:
	 _______
	|_|___|_|   <- top
	| |   | |
	|_|___|_|
	|_|___|_|   <- bottom

 	 ^     ^
	 |     |
	 |     right
	 |
	 left


	The shape and size of the border is decided by three values, mirroring the CSS box model:

	margin, width, padding.

	padding = distance from content to start of border (can be negative).
	width   = width of border (non-negative).
	margin  = extra size outside border.

	So the size of the outer rectangle of a component is the inner size + padding + width + margin.

	All these are stored for each of the side in clockwise order, e.g:
	margin = [margin_top, margin_right, margin_bottom, margin_left]

	The unit is in gui coordinates ("pixels").
*/

/* About color mixing:

   Each border has a color (RGBA, default [1,1,1,1]) and an overrideColor (0-1, default 0).

   The final color is a mix between the global bgColor (which can be set in skin options by the user)
   and the per-border color. The mixing is a linear interpolation using 'overrideColor':

   usedColor = (1-overrideColor) * bgColor  +  overrideColor * borderColor

	An overrideColor of 0 means the bgColor will be used and the border color ignored.
	An overrideColor of 1 means the border color will be used and the bgColor ignored.

	The resulting color ('usedColor' above) is then multiplied with the border textures ('border' and 'texture').


	In general, overrideColor should be kept low to let the user pick a color in the options - especially for the 'Window' border.
*/

Borders -> {
	Window -> {
		border = "white_darkgrey";
		borderScale = 0.5;
		texture = "squares";
		textureScale = 0.185; // Two texels on each pixel. Default.
		padding = -1;
		width   = 4;

		// To allow user to pick color in skin options, use color = [1,1,1,1] and overrideColor=0
		color = [1, 1, 1, 1]; // Should be 1 to allow user to pick color in skin options
		overrideColor = 0.0;  // Keep low to allow user to pick own color in skin options!
	};

	Empty -> { 
		border = "empty";
		padding = 0;
		width = 0;
		margin = 0;
	};

	Rest -> { 
		border = "empty";
	};

	Label ->  {
		border = "empty";
		margin = [0,2,0,2];
		//margin = 0;
	};

	Button -> { 
		border = "empty"; 
	};

	AloneButton ->  { 
		border = "gray_white";
		color = [.25,.66,.96,.75];
		overrideColor = 0.9;
		width = 8;
		padding = -2;
		margin = 4;
	};

	KeyboardButton ->  { 
		border = "gray_white";
		color = [.25,.66,.96,.75];
		overrideColor = 0.9;
		width = 8;
		padding = -4;
		margin = 2;
	};
	
	Number ->  {
		border = "grey_roundedtop";
		color = [0, 0, 0, 0.5];
		overrideColor = 0.75;
		padding = [-3,-6,-3,-6];
	};
	

	ToolTip -> { 
		border = "white_grey"; 
		color = [.7, .4, .3, 1]; 
		overrideColor = 1;
		width = 8;
		padding = 0;
	};

	WindowTitle -> { 
		border = "title"; 
		padding = [-6, 0, -2, -2];
	};

	TextBox -> {
		border = "gray_white";
		padding = [-5, -2, -5, -2];
		//margin = 2;
		margin = 2;
		color = [0,0,0,1];
		//color = [.8, .85, .9, 1];
		overrideColor = 0.9;
	};


	/* Sliders: the top level component is the LabeledSlider, containing a few labels and a slider.
	   The Slider component has its own border.
	   Unless the Slider is a color slider, it uses the SliderRange border for displaying its range.
	   SliderMarker is the current position or range of the slider.
   */

	Slider -> {
		border = "empty";
		color = [0, 0, 0, 0]; 
		overrideColor = 1.0;
		padding = 0;
		width = 0;
		padding = [2,5,0,5]; // Some space on the sides of sliders
		margin = 0; 
	};

	LabeledSlider -> { 
		border = "black_white";
		color = [0.45,0.5,0.55,0.25];
		overrideColor = 0.5;
		padding = [2,2,3,2];
		width = 2;
		margin = [2,4,4,4];
	};
	
	SliderRange -> {
		border = "slider_range";
		color = [0.725,0.75,0.775, 1]; 
		overrideColor = 0.5;
		padding = [-6, -3, -6, -3];
		width = 6;
		margin = [8,0,8,0];
	};

	SliderMarker -> { 
		border = "slider_marker";
		color = [1,1,1,1];
		overrideColor = 1;
		padding = [-2, 3, -2, 3];
		width = 4;
		margin = 0;
	};

	SliderMarker2D -> { 
		border = "slider2d";
		color = [1,1,1,1];
		overrideColor = 1;
		padding = 2;
		width = 3;
		margin = 0;
	};

	// Shows descriptive icons for e.g. thruster strength slider.
	Gauge -> {
		border = "blackwhite_black";
		padding = 0;
		width = 4;
		margin = 0;
	};

	DirectionSelector -> {
		border = "empty";
		padding = 0;
		width = 0;
		margin = [0, 8, 0, 1]; // To make it look good next to LabeledSlider.
	};

	ToolIcon -> { 
		border = "empty"; 
		margin = [0,-1,0,-1];
		padding = -3;
		width = 6;
	};

	Plot -> { 
		border = "white_white"; 
		color = [0,0,0,1]; // Dark background in plot...
		overrideColor = 0.9; // ...but let global color influence a bit.
		textureScale = 0.5;
		margin = [0, 8, 0, 8];
	};

	DragHoriz -> {
		padding = -4;
		width = 0;
		border = "white_white";
		texture = "drag_horiz_wrapped_dotted";
	};

	DragVert  -> {
		padding = -4;
		width = 0;
		border = "white_white";
		texture = "drag_vert_wrapped_dotted";
	};

	Tiny -> { 
		border = "gray_white";
		color = [.25,.66,.96,.75];
		overrideColor = 0.9;
		width = 8;
		padding = [-3,-2,-3,-2];
		margin = [0,2,0,2];
	};

	TabButtonUnselectedHoriz -> {
		border = "tab_button_unselected_horiz";
		padding = 0;
	};

	TabButtonSelectedHoriz -> {
		border = "tab_button_selected_horiz";
		padding = [0,0,-1,0];
	};

	TabButtonUnselectedVert -> {
		border = "tab_button_unselected_white";
		color = [0.45,.5,.55,1];
		overrideColor = .5;
		margin = [0,0,4,0];
		padding = [2,0,1,0];
	};

	TabButtonSelectedVert -> {
		border = "tab_button_selected_white";
		//color = [0.45,.5,.55,1];
		color = [0.3,0.5,0.3,1];
		overrideColor = 1;
		margin = [0,0,4,0];
		padding = [2,0,1,0];
	};

	Selected -> {
		border = "white_white";
		color = [1,1,1,0.5];
		overrideColor = 0.5;
		width = 6;
		margin = 0;
		padding = -4;
	};
	
	
	// Open sub-menu
	SelectedContext ->  {
		border = "white_white";
		color = [0.3,0.5,0.3,1]; /* green */
		overrideColor = 1;
		width = 8;
		padding = -3;
	};
	
	SidePanelButtonUnselected  -> {
		border = "empty";
		width = 6;
		margin = [0,-2,0,-2];
		padding = -1;
	};

	SidePanelButtonSelected -> {
		border = "white_white";
		texture = "squares";
		textureScale = 0.125; // Two texels on each pixel. Default.
		color = [1,1,1,0.5]; // 50% bgColor
		overrideColor = 0.5; 
		padding = [-3,-3,-3,-3];
		width = 8;
		margin = [0,-2,0,-2];
	};

	SidePanelConnector -> {
		/* Template for connector between RIGHT side panel an the open widget on its left.
		   Will be rotated for other connectors.
		*/
		border = "connector";
		borderScale = 0.5;
		texture = "squares";
		textureScale = 0.125; // Two texels on each pixel. Default.
		color = [1,1,1,1]; // grey
		overrideColor = 0; // Only use 20% of bgColor.
		padding = [-8,-4,-8,-2];
		width = [8,0,8,0];
		margin = [-2,2,-2,2];
	};

	MouseOver -> {
		border = "white_white";
		//color = [0.8,0.85,0.9,1]; /* grey */
		color = [0.4,0.6,0.4,1]; /* green */
		//color = [1, .4, .3, 1]; /* red */
		//color = [.4, .6, .8,1]; // blue
		overrideColor = 1;
		width = -4;
	};

	DropShadow -> {
		border = "dropShadow";
		color = [0.0, 0.0, 0.0, 0.4];
		padding = [0,4,4,0];
		width = 16;
	};

	HorizLine -> {
		color = [1,1,1,0]; 
		overrideColor = 0.1;
		border = "all_white";
		texture = "horiz_line_wrapped";
		padding = 0;
		width = 0.5;
		margin = [6, -2, 6, -2];
		textureScale = 0.25;
	};
	
	VertLine -> {
		color = [1,1,1,0];
		overrideColor = 0.1;
		border = "all_white";
		texture = "vert_line_wrapped";
		padding = 0;
		width = 0.5;
		margin = [-2, 8, -2, 8];
		textureScale = 0.25;
	};
	
	// Should be invisible (that's the point of it).
	Padding -> {
		border = "empty";
		color = [0,0,0,0]; 
		overrideColor = 0.0;
		padding = 0;
		width = 0.5;
		margin = [4, 4, 4, 4];
	};

	/* Components with focus (i.e. textboxes, buttons after pressing tab, etc)
	   can have an _extra_ border on them. This is that border. */
	Button_Focused -> {
		border = "white_lightgrey";
		color = [0.3,0.5,0.3,1];
		overrideColor = 1;
		padding = 1;
		width = 4;
		margin = 2;
	};

	TextBox_Focused -> {
		border = "white_empty";
		color = [0.3,0.5,0.3,1];
		overrideColor = 0.75;
		padding = [-6,-3,-6,-3];
		width = 12;
		margin = 2;
	};
};
